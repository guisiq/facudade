// desafio =labirinto 
import java.util.Random;

public class labirintoV2_1 {
    public static void main(final String[] args) {
        boolean expandiu = true;
        boolean camilho = false;

        Random aleatorio = new Random();
        int i2 = 0;
        int labirintosSemSaida = 0;        
        int[][] labirinto = new int[20][20];
        //0 espaco em branco
        //1 e 5 paredes
        //2 para começo e fim  
        //3 e 4 reservada para testar caminho
        //lembrete pra concerta os nomes da variaveis linhas e coluna que estao trocadas 


        while (!camilho) {
            expandiu = true;
            camilho = false;
            //fazendo as paredes externas(contorno)
            for (int coluna = 0; coluna < labirinto.length; coluna++) {
                for (int linha = 0; linha < labirinto[coluna].length; linha++) {
                    if (coluna == 0 || coluna == labirinto.length - 1 || linha == 0
                            || linha == labirinto[0].length - 1) {
                        labirinto[coluna][linha] = 5;
                    } else {
                        labirinto[coluna][linha] = 0;
                    }
                }
            }
            // gerando paredes aleatorias 
            /*obs:tirando as paredes ha 324 elementos para o melhor funcionamento defina i para menos 
            que a metade disso(162)numeros mais aultos gerram maior probabilidade de lobirintos sem saidas 
            para comparacao com i = 150 gerou 16765 labirintos sem saida
            */
            i2 = 0;
            for (int i = 0; i < 150; i++) {
                int x;
                int y;
                int aredor = 0;
                i2++;
                //se ou augoritimo fica no lupe por muito tempo ele deverar sair e tentar de novo 
                if (i2 % 1550 == 0) {
                    System.out.println("i2/1550 = " + i2 / 1550);
                    if(i2 % (15500*6) == 0){
                        i = 155;
                        expandiu = false;
                    }
                }
                x = aleatorio.nextInt(20);
                y = aleatorio.nextInt(20);
                if (labirinto[x][y] == 0 && !((x == 1 && y== 1 ) || (x == 18 && y== 18 ))) {
                    // cauculando os aredores da posiçao selecionada pelo sorteio e armazenando em aredor
                    // se aredor for maior que 3 sera sorteado outra posisao para as paredes ficarem mais espalhadas  
                    if (labirinto[x + 1][y + 1] == 1) {
                        aredor++;
                        aredor++;
                    }
                    if (labirinto[x + 1][y - 1] == 1) {
                        aredor++;
                        aredor++;
                    }
                    if (labirinto[x + 1][y] == 1) {
                        aredor++;
                    }
                    if (labirinto[x][y + 1] == 1) {
                        aredor++;
                    }
                    if (labirinto[x][y - 1] == 1) {
                        aredor++;
                    }
                    if (labirinto[x - 1][y - 1] == 1) {
                        aredor++;
                        aredor++;
                    }
                    if (labirinto[x - 1][y + 1] == 1) {
                        aredor++;
                        aredor++;
                    }
                    if (labirinto[x - 1][y] == 1) {
                        aredor++;
                    }
                    //testando se o ponto escolhido  esta colado em auguma parede 
                    if (labirinto[x + 1][y - 1] == 5 || labirinto[x + 1][y + 1] == 5 || labirinto[x - 1][y - 1] == 5
                            || labirinto[x - 1][y + 1] == 5) {
                        aredor = aredor + 3;
                    }
                    if (aredor <= 4) {
                        labirinto[x][y] = 1;
                        aredor = 0;
                    } else {
                        i--;
                        aredor = 0;
                    }
                } else {
                    i--;
                    i2--;
                }
            }
            labirinto[1][0] = 3;  //começo
            labirinto[18][19] = 0;//fim  
            //checando se o labirinto tem auguma saida 
            while (!camilho && expandiu) {

                for (int coluna = 0; coluna < labirinto.length; coluna++) {
                    for (int linha = 0; linha < labirinto[0].length - 1; linha++) {
                        if (labirinto[coluna][linha] == 3) {
                            //expandindo para direita 
                            if (labirinto[coluna][linha + 1] == 0) {
                                labirinto[coluna][linha + 1] = 3;
                                expandiu = true;
                            }
                            //expandindo para esquerda se nao tiver na posisao 0 para nao extrapolar o array
                            if (linha - 1 >= 0) {
                                if (labirinto[coluna][linha - 1] == 0) {
                                    labirinto[coluna][linha - 1] = 3;
                                    expandiu = true;
                                }
                            }
                            //expandindo para cima
                            if (labirinto[coluna + 1][linha] == 0) {
                                labirinto[coluna + 1][linha] = 3;
                                expandiu = true;
                            }
                            //expandindo para baixo 
                            if (labirinto[coluna - 1][linha] == 0) {
                                labirinto[coluna - 1][linha] = 3;
                                expandiu = true;
                            }
                            if (labirinto[18][19] == 3) {
                                camilho = true;
                            }
                            labirinto[coluna][linha] = 4;
                        }
                    }
                }
                expandiu = false;
                //se for formado uma quantidade de labirintos sem saida mutiplo de 10 sera informado 
                labirintosSemSaida++;
                if (labirintosSemSaida%10==0) {
                    System.out.println("foram gerados :" + labirintosSemSaida + "labirintos sem saida ");
                }
                    
            }

        }
        System.out.println("/-----------------o labirinto de paredes randomicas que foi gerado -----------------/ :");
        System.out.println("foram gerados :" + labirintosSemSaida + "labirintos sem saida ");
        for (int coluna = 0; coluna < labirinto.length; coluna++) {
            for (int linha = 0; linha < labirinto[coluna].length; linha++) {
                if (labirinto[coluna][linha] == 0 ||labirinto[coluna][linha] == 3 ||labirinto[coluna][linha] == 4 ) {
                System.out.print("  ");    
                }else{
                System.out.print("# ");
                }
            }
            System.out.println();
        }
               
    
    }
}
//01 - Escreva um programa que permita ao usuário preencher uma matriz de dimensões 3x3 e imprima na tela a matriz e a soma dos elementos de cada linha e de cada coluna. 

import java.util.Scanner;
public class aula6exercicio01 {
    public static void main(String[] args) {
        int[][] matriz = new int[3][3];
        Scanner leitor = new Scanner(System.in);
        for (int i = 0; i < matriz.length; i++) {
            for (int j = 0; j < matriz[0].length; j++) {
                System.out.println(
                        "escreva um numero para preencher o elemento de posicao " + i + "e" + j + "da matriz 3x3");
                matriz[i][j] = leitor.nextInt();
            }
        }
        for (int linha = 0; linha < matriz.length; linha++) {
            int soma = 0;
            for (int coluna = 0; coluna <= matriz[0].length; coluna++) {
                if (coluna < matriz[0].length) {
                    System.out.print(matriz[linha][coluna] );
                    soma = soma + matriz[linha][coluna];
                    if (coluna < matriz[0].length-1) {
                        System.out.print("+");
                    }
                } else {
                    System.out.print("="+soma);
                }
            }
            System.out.println();
        }
}
}
//02 - Escreva um programa que permita ao usuário preencher uma matriz de dimensões 3 x 3 e imprima na tela a soma dos elementos da diagonal principal.

import java.util.Scanner;
public class aula6exercicio02 {
    public static void main(String[] args) {
        int[][] matriz = new int[3][3];
        Scanner leitor = new Scanner(System.in);
        for (int i = 0; i < matriz.length; i++) {
            for (int j = 0; j < matriz[0].length; j++) {
                System.out.println(
                        "escreva um numero para preencher o elemento de posicao " + i + "e" + j + "da matriz 3x3");
                matriz[i][j] = leitor.nextInt();
            }
        }
        for (int linha = 0; linha <= matriz.length; linha++) {
            for (int coluna = 0; coluna < matriz[0].length; coluna++) {
                
                if (linha == matriz.length) {
                    int soma = 0;
                    for (int i = 0; i < matriz.length; i++) {
                        soma = soma + matriz[i][coluna];
                    }
                    System.out.print(soma+" ");
                } else {
                    System.out.print(matriz[linha][coluna]+"  ");
                }
            }
            System.out.println();
        }
}
}
import java.util.Scanner;
//03 - Escreva um programa que permita ao usuário preencher as duas primeiras colunas de uma matriz de dimensões 3x3. O programa deve preencher automaticamente a terceira coluna com a soma dos elementos correspondentes das colunas anteriores. 
public class aula6exercicio03{
    public static void main(String[] args) {
        int[][] matriz = new int[3][3];
        Scanner leitor = new Scanner(System.in);
        for (int i = 0; i < matriz.length-1; i++) {
            for (int j = 0; j < matriz[0].length; j++) {
                System.out.println(
                        "escreva um numero para preencher o elemento de posicao " + i + "e" + j + "da matriz 3x3");
                matriz[i][j] = leitor.nextInt();
            }
        }
        for (int linha = 0; linha <= matriz.length-1; linha++) {
            for (int coluna = 0; coluna < matriz[0].length; coluna++) {
                
                if (linha == matriz.length-1) {
                    int soma = 0;
                    for (int i = 0; i < matriz.length; i++) {
                        soma = soma + matriz[i][coluna];
                    }
                    matriz[linha][coluna] = soma;
                    System.out.print(soma+"  ");
                } else {
                    System.out.print(matriz[linha][coluna]+"  ");
                }
            }
            System.out.println();
        }
}
}
import java.util.Scanner;
//04 - Escreva um progama que efetue a soma de duas matrizes de com as dimensões e valores definidos pelo usuário e apresente o resultado. 
public class aula6exercicio04{
    public static void main(String[] args) {
        Scanner leitor = new Scanner(System.in);
        int dimensao = 0;
        System.out.println("digite a dimensao para a criacao de duas matrizes quadraticas ");
        dimensao = leitor.nextInt();
        int[][][] matriz = new int[2][dimensao][dimensao];
        for (int e = 0; e < 2; e++) {
            for (int i = 0; i < matriz[0].length; i++) {
                for (int j = 0; j < matriz[0][0].length; j++) {
                    System.out.println("escreva um numero para preencher o elemento de posicao " + i + "e" + j
                            + "da matriz " + e + " de " + dimensao + "x" + dimensao);
                    matriz[e][i][j] = leitor.nextInt();
                }
            }
        }
        System.out.println("a soma das matrizes e igual a :");
        for (int linha = 0; linha <= matriz[0].length-1; linha++) {
            for (int coluna = 0; coluna < matriz[0][0].length; coluna++) {

                    int soma = 0;
                    soma = matriz[1][linha][coluna] + matriz[0][linha][coluna];
                    System.out.print(soma+"  ");
            }
            System.out.println();
        }
}
}